from django.contrib import admin
from .models import ApiKey
import secrets


@admin.register(ApiKey)
class ApiKeyAdmin(admin.ModelAdmin):
    list_display = ('user', 'short_key', 'is_active', 'created_at')
    list_filter = ('is_active', 'created_at')
    search_fields = ('user__username', 'key')
    readonly_fields = ('key', 'created_at')
    actions = ['regenerate_keys']

    def short_key(self, obj):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–∫–æ—Ä–æ—á–µ–Ω–Ω—ã–π –∫–ª—é—á"""
        return obj.key[:12] + "..."
    short_key.short_description = "–ö–ª—é—á"

    def save_model(self, request, obj, form, change):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—ë—Ç –∫–ª—é—á –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏"""
        if not obj.key:
            obj.key = secrets.token_hex(32)
        super().save_model(request, obj, form, change)

    def regenerate_keys(self, request, queryset):
        """–î–µ–π—Å—Ç–≤–∏–µ –≤ –∞–¥–º–∏–Ω–∫–µ: –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∫–ª—é—á–∏"""
        for api_key in queryset:
            api_key.key = secrets.token_hex(32)
            api_key.save()
        self.message_user(request, f"–ö–ª—é—á–∏ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã ({queryset.count()})")
    regenerate_keys.short_description = "üîÅ –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∫–ª—é—á–∏"
