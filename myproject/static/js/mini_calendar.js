// static/js/mini_calendar.js
document.addEventListener("DOMContentLoaded", () => {
  const grid = document.getElementById("mini-calendar-grid");
  const monthLabel = document.getElementById("mini-month");
  const prevBtn = document.getElementById("prev-month");
  const nextBtn = document.getElementById("next-month");

  let current = new Date();

  // üéâ –ü—Ä–∞–∑–¥–Ω–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
  const HOLIDAYS = {
    "01-01": "–ù–æ–≤—ã–π –≥–æ–¥",
    "01-02": "–ù–æ–≤—ã–π –≥–æ–¥",
    "01-07": "–†–æ–∂–¥–µ—Å—Ç–≤–æ",
    "03-08": "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –¥–µ–Ω—å",
    "03-21": "–ù–∞—É—Ä—ã–∑",
    "03-22": "–ù–∞—É—Ä—ã–∑",
    "03-23": "–ù–∞—É—Ä—ã–∑",
    "05-01": "–ü—Ä–∞–∑–¥–Ω–∏–∫ –µ–¥–∏–Ω—Å—Ç–≤–∞ –Ω–∞—Ä–æ–¥–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞",
    "05-07": "–î–µ–Ω—å –∑–∞—â–∏—Ç–Ω–∏–∫–∞ –û—Ç–µ—á–µ—Å—Ç–≤–∞",
    "05-09": "–î–µ–Ω—å –ü–æ–±–µ–¥—ã",
    "07-06": "–î–µ–Ω—å —Å—Ç–æ–ª–∏—Ü—ã",
    "08-30": "–î–µ–Ω—å –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏",
    "10-25": "–î–µ–Ω—å –†–µ—Å–ø—É–±–ª–∏–∫–∏",
    "12-01": "–î–µ–Ω—å –ü–µ—Ä–≤–æ–≥–æ –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞",
    "12-16": "–î–µ–Ω—å –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏",
    "12-17": "–î–µ–Ω—å –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
  };

  // tooltip
  const tooltip = document.createElement("div");
  tooltip.className = "mini-tooltip";
  document.body.appendChild(tooltip);

  function renderCalendar(date) {
    grid.innerHTML = "";

    const year = date.getFullYear();
    const month = date.getMonth();

    monthLabel.textContent = date.toLocaleString("ru-RU", { month: "long", year: "numeric" });

    const firstDay = new Date(year, month, 1);
    const lastDay = new Date(year, month + 1, 0);

    const startDay = firstDay.getDay() === 0 ? 7 : firstDay.getDay();
    const daysInMonth = lastDay.getDate();

    // –ø—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏ –¥–æ –Ω–∞—á–∞–ª–∞ –º–µ—Å—è—Ü–∞
    for (let i = 1; i < startDay; i++) {
      grid.innerHTML += `<div></div>`;
    }

    // –¥–Ω–∏ –º–µ—Å—è—Ü–∞
    for (let d = 1; d <= daysInMonth; d++) {
      const dayDate = new Date(year, month, d);
      const today = new Date();
      const isToday =
        d === today.getDate() &&
        month === today.getMonth() &&
        year === today.getFullYear();

      const isWeekend = dayDate.getDay() === 0 || dayDate.getDay() === 6;
      const key = `${String(month + 1).padStart(2, "0")}-${String(d).padStart(2, "0")}`;
      const holidayName = HOLIDAYS[key];

      const cell = document.createElement("div");
      cell.className = "day";
      if (isToday) cell.classList.add("today");
      if (isWeekend) cell.classList.add("weekend");
      if (holidayName) cell.classList.add("holiday");

      cell.textContent = d;

      // –µ—Å–ª–∏ –ø—Ä–∞–∑–¥–Ω–∏–∫ ‚Üí –Ω–∞–≤–µ–¥–µ–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π tooltip
      if (holidayName) {
        cell.addEventListener("mouseenter", (e) => {
          tooltip.textContent = holidayName;
          tooltip.style.display = "block";
          tooltip.style.left = e.pageX + 10 + "px";
          tooltip.style.top = e.pageY + 10 + "px";
        });
        cell.addEventListener("mousemove", (e) => {
          tooltip.style.left = e.pageX + 10 + "px";
          tooltip.style.top = e.pageY + 10 + "px";
        });
        cell.addEventListener("mouseleave", () => {
          tooltip.style.display = "none";
        });
      }

      grid.appendChild(cell);
    }
  }

  prevBtn.addEventListener("click", () => {
    current.setMonth(current.getMonth() - 1);
    renderCalendar(current);
  });

  nextBtn.addEventListener("click", () => {
    current.setMonth(current.getMonth() + 1);
    renderCalendar(current);
  });

  renderCalendar(current);
});
